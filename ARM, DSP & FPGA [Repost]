　DSP技术，在某些人看来，或者已经面临着英雄迟暮的感觉，就我们当前所知道的。Freesacle、ADI、NXP早就停掉了新技术发展，而当前从大的方面说只剩下TI一家扛着Digital Signal Processor的大旗。

　　在很多人看来，这十年来，ARM和Intel的发展幅度已经远远超过了DSP。尤其是在ARM，其A9双核、A15四核在嵌入式市场已经以摧枯拉朽之势占领了主导地位，但我们不能否认，在工业领域，DSP的应用还是占有很重要的位置。而在Intel，自Silvermont推出以后，低功耗的X86又称为一股强劲势力。有人就会觉得ARM和Intel在未来的某个日子能够取代DSP。
关于这个问题，电子工程师陈俊直给出了一个这样的看法：

　　他认为，对于DSP，有两个解释，第一个Digital Signal Processing，是数字信号处理，是门学科技术，简单的说是讲现实世界中的模拟信号量转换为数字信号量然后进行分析、离散变换、调制解调等等方面的数字运算。其有别于简单的加减乘数等四则运算；

　　第二个解释就是Digital Signal Processor，数字信号处理器，简单的说就是嵌入了可以快速处理数字信号分析、离散变换、调制解调等方面的一种特殊的微处理器。

　　从解释上可以看出，DSP芯片就是一颗加入了数字信号处理功能的微处理器芯片。

　　那么ARM、和Intel的芯片也是微处理器芯片，大家其实工作都是进行运算，那么不带数字信号处理功能的微处理器和带该功能的处理器有什么区别呢？

　　DSP处理器有一个指标，就是“乘法和累加运算”，就是一个32位数乘上另一个32位数其积再加一个32位数，这个运算过程要在一两个指令周期内完成。换了ARM和Intel的微处理器，是不可能在一两个指令周期完成的，它们乘法就要跑好几个指令周期了。而DSP芯片自带了一个MAC模块，主频相同情况下，可以比ARM和INTEL快N倍的计算出来。类似的还有快速傅里叶变换功能，这种数学运算在没有DSP功能的芯片中，往往要算好长时间才能出结果。

　　那么你会说了，那我ARM和Intel的芯片业嵌入这种模块就行了啊。是的，可以嵌。但是，一旦嵌入这种芯片，那么ARM芯片也可以叫做DSP芯片了。

　　所以，DSP只是一种技术，一种嵌了该技术的芯片，谁都可以生产。其实有些ARM芯片内部就嵌入了DSP功能，比如很多高通的一系列用于手机上的ARM主控芯片就自带DSP功能。

　　而Intel自身发展是做计算领域的主控，在工业航天医疗等嵌入式领域才用得多的数字信号处理他们并不怎么涉及，所以他们的东西基本不会嵌入DSP模块。

　　Microchip为了避免和TI的C2000系列DSP直接竞争，他们把旗下的dsPIC系列DSP芯片叫做DSC，其实还是DSP芯片，而且他们一直在推出下新品。还有，飞思卡尔、ADI、NXP他们还都有生产DSP，只是他们争不过TI的专用DSP。主要一点还是发现争不过FPGA芯片。

　　这里又引出了FPGA这个技术，说到这个，或许才真的是DSP的真正敌人。目前做FPGA芯片的大厂有Altera、Xilinx等。他们不属于Intel公司，也不生产ARM芯片，他们只专注于FPGA芯片。

　　我们知道，微处理器芯片其实是一堆数字电路大规模超高密度集成在芯片中，其最小单元其实就是晶体管，晶体管集成一个个门电路。门电路通过一系列排列组合形成了芯片内部CPU、存储单元。这都是出厂前固化好的。

　　那我能否修改一下CPU 模块的某个门电路，让它有别的用途呢？已经出厂就固化的没法改，但现在有了FPGA，你可以用程序编一个你自己发明的CPU内核出来，嵌到FPGA芯片中去，那么你想加入DSP有的MAC模块等都可以，如果你觉得一个CPU内核不过瘾，还可以再加一个内核进去（前提是FPGA芯片容量和资源够大，当然这芯片就贵了）。

　　所以，现在飞思卡尔、ADI等看到FPGA芯片如此强势，工业级的DSP成本又高，卖的价格跟FPGA差不多，价格比FPGA低点但又争不过TI的DSP市场。所以没办法，只好慢慢退出了。现在TI也是靠以前的老客户死扛着。万一哪天，高端的FPGA降到跟他们差不多的价格，他们也要退出了。

　　当然FPGA的缺点除了自身成本高以外，如果要嵌入ARM、DSP核的话，这些核也更是要花钱的。同时就是FPGA的HDL开发难度要远大于DSP的C，特别是在典型的图像处理算法上，这也在一定程度上限制了FPGA的发展。虽然现在Xilinx的Vivado支持high level synthesis，把C转成HDL，但是，这也是一个很困难的问题。这也不是一个明智的选择。

　　在某些工程师看来，作为一个带有专用计算单元的处理器。DSP是为了满足专用市场做的一种带许多数学计算功能的处理器。比如哈弗结构，比如带SIMD、VLIW技术的计算单元，曾经让DSP在专用市场领先很多。而TI DSP的优势就是低功耗、高运算性能、成熟稳定，再加上明显的价格优势。

　　从架构来说，TI固守的哈弗结构近十年没大的改动，而arm、intel推陈出新的速度还是有目共睹的。看两个小例子，intel的分支预测领先TI家很多；再比如TI的二级缓存、片内片外还需要用户来管理，cache miss penalty也相当高，而intel高超的缓存技术让你基本感觉不到片内片外的区别。

　　再看运算单元，现在arm有neon，intel有sse、avx、乱序执行，还有专用图像计算的gpp；再加上FPGA。这些产品计算单元都已经很强悍了，所以说DSP的数学计算性能已经不能算是领先了。比如DSP里两个4字节整型做乘加运算，TI的C674x需要4个时钟周期，intel的sse3处理16个字节的乘加运算也只需要4个周期；

　　而在复杂算法领域，比如图像处理、模式识别，DSP是真的不够用了，跑个boosting都吃力的要死，压缩感知算法也就预研预研，最终绝大部分还是跑在intel、amd平台。

　　简单算法，可选的处理器太多，所以最重要的就是价格。我看好arm，而fpga没有价格优势。当然现在c2000现在还是有很多拥趸的，但是已经被别的处理器吃掉不少市场了。

　　以上是以计算性能为核心介绍的，没有涉及到功耗。而在同样的计算量，耗时相近的情况下，DSP的功耗控制是最优秀的，ARM、atom都不如DSP功耗低（asic可能也很好，但是不算通用处理器）。这也是为什么在嵌入式复杂算法市场，还是DSP为主流。

　　而就陈工看来，DSP的计算优势并不在于普通四则运算上。就拿快速傅里叶变换FFT来说，同频率下，其他任何不带DSP内核的微处理器的FFT都要逊色于DSP。我们做DSP或者嵌入式其他的算法，都是根据《自动控制原理》或者《信号系统》，而不是根据《数据结构》。

　　他认为DSP做boosting不是一个明智的选择，DSP对频域方面的运算能力可以设计一个实时声音过滤器（将嘈杂环境中的声音全部通过麦克风传到AD电路上，后通过DSP运算，把其中某个人的声音摘出来，并通过喇叭实时放出来某人的声音。这样的数字滤波器可以做到比手机还小）。在TI DSP最大供货的工业控制、航天领域，多数的DSP应用上跟计算机算法技术没啥关系。

　　而说到DSP的低功耗，当然DSP做滤波、音频处理等方面的时候，没用到DSP功能把（只是把它们当一个单片机那样来使用），这样功耗是很低的。但如果用DSP做SPWM或数字滤波器什么的时候，功耗就大起来。具体对比数值我已经忘了，以前做矿用电机控制的时候对比过用ARM控制的功耗。（但好像Microchip的DSP芯片在做滤波时候功耗更低）。

　　其实，16bit/32bit的DSP芯片（或是其他32位MCU/ARM嵌入DSP功能的芯片）在长期发展中一直和各种单片机、ARM、PowerPC、X86等共存，并且不仅仅是TI，其他很多厂家都专门生产或者嵌入DSP模块（比如Microchip的dsPIC系列DSP芯片，就一直不断出新品）。这就说明DSP拥有着其他各种架构处理器都不拥有的信号处理能力。

　　综合看下来，FPGA才是未来的大杀器，大家怎么看待？当然，整个讨论只是一家之言，希望大家能够理性看待整个讨论。

2、DSP就是一个指令比较独特的处理器。它虽然是通用处理器，但是实际上不怎么“通用”。技术很牛的人可以用DSP做一台电脑出来跑windows，而实际上真正这么干的肯定是蠢材。用DSP做信号处理，比其他种类的处理器要厉害;用DSP做信号处理之外的事情，却并不见长。而且信号处理的代码一般需要对算法很精通的人才能真正写好。数据结构里面的时间复杂度和空间复杂度在这里是一把很严酷的尺子。
　　3、FPGA只不过披着软件的外衣，实际上是硬件。FPGA内部有两层相对独立的电路。使用者“编码->编译”后生成一个映像，这个映像作用于第一层电路。这层电路之际上就是一个0，1的开关矩阵，这个开关矩阵用来控制第二层工作电路，将第二层工作电路配置成一个相应的处理器。理论上FPGA可以配置成任何需要的处理器，而实际上为了尽量少出bug，FPGA开发都使用已经开发好的“库文件”，也就是把人家能稳定工作的电路图拿过来。因此，对大多数FPGA开发者来说，FPGA内部有几个核基本上只能从库文件里面选——除非你有能力自己设计核心内部的电路和核间总线——ram和rom也是用宏来配置，自己只需要改改外部的专用电路和接线方式等等。甚至外部的专用电路都有库文件，搭个积木就完事了。玩FPGA真正挣钱的人是做积木的人，你原创几个积木并且能申请专利，迫使人家给你交专利费，那你这辈子可以衣食无忧了。
　　4、FPGA区别于ASIC设计属于硬件设计的范畴，ASIC是硬件全定制，FPGA是硬件半定制。具体来说：ASIC整个电路都由设计师设计的，用多少资源设计多少资源，一般多用于产品设计。而FPGA资源事先由厂商给定，例如Altera、Xilinx等都提供不同系列的FPGA芯片，设计师可以在给定资源下做硬件设计开发。
　　5、DSP主要用于处理信号、事先算法，特点是多级流水，可以加快数据处理的速度，开发环境主要是C语言。可以说DSP应用的范围更专。DSP的设计，可以理解为软件设计，设计师不需要太了解DSP的结构。
　　6、DSP原意就是指数字信号处理，只不过DSP芯片由于主要功能是实现数字信号处理，实现各种算法，所以简称为DSP(数字信号处理器);FPGA一样可以做DSP(数字信号处理)，就意味着可以用FPGA做硬件设计来实现DSP芯片的功能，当然，相比较专业的DSP芯片、成本太高。
　　7、现在除了FPGA和DSP之外还有一个近几年热门的产品：ARM。ARM主要应用与手持设备和嵌入式产品，几乎笼罩了90%的市场份额。可以说ARM开发也偏向于软件开发，设计者主要是讲Wince系统或者Linux系统移植到ARM开发平台上，然后做各种软件应用开发。
　　所以，这三个方向都有其不同的应用场合，很难讲谁更有前途。不过，作为我个人而言，更喜欢做硬件设计，所以我选择FPGA作为自己的方向。FPGA主要是给设计者提供了一个硬件平台，开发的核心还是需要独立的应用设计和高效的算法设计。所以设计者应该处理好工具的掌握和具体设计的区别。
　　各自特点：
　　FPGA:并行处理，内部资源多。
　　DSP：成本低、低功耗、高性能的处理能力。具有强大的外部通信接口(SCI，SPI,CAN)便于构成大的控制系统。
　　特点：

        (1)在一个指令周期内可完成一次乘法和一次加法;
　　(2)程序和数据空间分开，可以同时访问指令和数据;
　　(3)片内具有快速RAM，通常可通过独立的数据总线在两块中同时访问;
　　(4)具有低开销或无开销循环及跳转的硬件支持;
　　(5)快速的中断处理和硬件I/O支持;
　　(6)具有在单周期内操作的多个硬件地址产生器;
　　(7)可以并行执行多个操作;
　　(8)支持流水线操作，使取指、译码和执行等操作可以重叠执行。
　　本人认为FPGA更有前途!DSP其实只是个特殊的处理器，有专用的硬件乘法器，有桶形移位器可以把数据从存储器移到ALU，还有流水线等技术。但FPGA同样可以完成这些功能，并且FPGA是并行工作的，现在很多FPGA内部可以使用软DSP或者硬核的DSP，当你的项目需要时序很严格的情况非FPGA莫属。比如说用DSP和USB芯片CY68013进行FIFO(同步传送)数据时，IFCLK可以是外部或内部，USB芯片在(IFCONFIG的IFCLKSRC里配置)。如果IFCLK使用内部的情况下，DSP根本无法知道我把数据送到FIFO数据端口后USB芯片内部时钟过了多少周期，但FPGA就可以，因为FPGA的时钟取自于USB芯片的48M输出，在FPGA内部做一个状态机，当数据送到USB芯片的FIFO数据端口时，下一状态把SLWR拉低，再下一状态拉高，就等于USB内部过了一周期，数据就写进USB芯片内部的FIFO了，我只是举个简单的例子，很多关于时序的案例非FPGA莫属，DSP做算法快速，成熟，FPGA更有挑战，据我的经验，FPGA现在内部起码有很多核是可以用的，这像一个可配置的单片机，不用的我就不放进项目。以ACTEL的FPGA来说，用的比较多的软核是:Core8051S、CoreABC、微处理器软核，特别说明CoreABC占用的空间非常少，可以裁减指令，可以配置数据宽度8,16,32，有1组通用输入端口和输出端口，可配置堆栈。有CoreDES,CoreAES128,CoreFROM,CoreI2C,CoreGPIO,CoreInterrupt,CoreLPC,CoreSDR,CoreUART,还有很多很多，看这些名字，很多人都知道干什么用的。
